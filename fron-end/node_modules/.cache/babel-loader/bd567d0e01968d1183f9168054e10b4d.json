{"ast":null,"code":"var _jsxFileName = \"/home/mohammad/Desktop/final/src/Components/Add Produts/AddProdut.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./AddProduct.css\";\n\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlDefault = e => {\n      e.preventDefault();\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = []; // list allow mime type\n\n      const types = [\"image/png\", \"image/jpeg\", \"image/gif\"]; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container\n          err[x] = files[x].type + \" is not a supported format\\n\";\n        }\n      }\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error\n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.maxSelectFile = event => {\n      let files = event.target.files;\n\n      if (files.length > 3) {\n        const msg = \"Only 3 images can be uploaded at a time\";\n        event.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 2000000;\n      let err = [];\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err[x] = files[x].type + \"is too large, please pick a smaller file\\n\";\n        }\n      }\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error\n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        // if return true allow to setState\n        this.setState({\n          selectedFile: files,\n          loaded: 0\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n\n      for (var x = 0; x < this.state.selectedFile.length; x++) {\n        data.append(\"file\", this.state.selectedFile[x]);\n      }\n\n      axios.post(\"http://localhost:8080/upload\", data, {\n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        // then print response status\n        toast.success(\"upload success\");\n      }).catch(err => {\n        // then print response status\n        toast.error(\"upload fail\");\n      });\n    };\n\n    this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AddProduct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlDefault,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"item1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"btn btn-secondary\",\n      type: \"text\",\n      placeholder: \"Name Of Product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Name Of Product\")), React.createElement(\"div\", {\n      className: \"item2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"option\", {\n      value: \"laptop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Laptop\"), React.createElement(\"option\", {\n      value: \"screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Sceeen\")), React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Select Type Of Product\")), React.createElement(\"div\", {\n      className: \"item3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"btn btn-secondary\",\n      type: \"text\",\n      cols: \"30\",\n      rows: \"5\",\n      placeholder: \"Details Of Product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Details Of Product\")), React.createElement(\"div\", {\n      className: \"container item4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"offset-md-3 col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Upload Your File \"), React.createElement(\"input\", {\n      type: \"file\",\n      class: \"form-control\",\n      multiple: true,\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, Math.round(this.state.loaded, 2), \"%\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Upload\")))), React.createElement(\"div\", {\n      className: \"item5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"btn btn-secondary\",\n      type: \"text\",\n      placeholder: \"Place\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Place\"), React.createElement(\"input\", {\n      className: \"btn btn-secondary\",\n      type: \"text\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: \"btn btn-secondary\",\n      type: \"number\",\n      placeholder: \"Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Mobile\"), React.createElement(\"input\", {\n      className: \"btn btn-secondary\",\n      type: \"email\",\n      placeholder: \"Place\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Email\")), React.createElement(\"div\", {\n      className: \"item6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"vehicle1\",\n      value: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), \" Phone\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"vehicle2\",\n      value: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), \" Email\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"vehicle3\",\n      value: \"phone/email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), \"Email/Phone\", React.createElement(\"buutton\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Contact With\")), React.createElement(\"div\", {\n      className: \"item7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default AddProduct;","map":{"version":3,"sources":["/home/mohammad/Desktop/final/src/Components/Add Produts/AddProdut.js"],"names":["React","Component","axios","Progress","ToastContainer","toast","AddProduct","constructor","props","handlDefault","e","preventDefault","checkMimeType","event","files","target","err","types","x","length","every","type","z","error","value","maxSelectFile","msg","warn","checkFileSize","size","onChangeHandler","setState","selectedFile","loaded","onClickHandler","data","FormData","state","append","post","onUploadProgress","ProgressEvent","total","then","res","success","catch","render","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./AddProduct.css\";\n\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n  }\n\n  handlDefault = e => {\n    e.preventDefault();\n  };\n  checkMimeType = event => {\n    //getting file object\n    let files = event.target.files;\n    //define message container\n    let err = [];\n    // list allow mime type\n    const types = [\"image/png\", \"image/jpeg\", \"image/gif\"];\n    // loop access array\n    for (var x = 0; x < files.length; x++) {\n      // compare file type find doesn't matach\n      if (types.every(type => files[x].type !== type)) {\n        // create error message and assign to container\n        err[x] = files[x].type + \" is not a supported format\\n\";\n      }\n    }\n    for (var z = 0; z < err.length; z++) {\n      // if message not same old that mean has error\n      // discard selected file\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n  maxSelectFile = event => {\n    let files = event.target.files;\n    if (files.length > 3) {\n      const msg = \"Only 3 images can be uploaded at a time\";\n      event.target.value = null;\n      toast.warn(msg);\n      return false;\n    }\n    return true;\n  };\n  checkFileSize = event => {\n    let files = event.target.files;\n    let size = 2000000;\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n      if (files[x].size > size) {\n        err[x] = files[x].type + \"is too large, please pick a smaller file\\n\";\n      }\n    }\n    for (var z = 0; z < err.length; z++) {\n      // if message not same old that mean has error\n      // discard selected file\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n  onChangeHandler = event => {\n    var files = event.target.files;\n    if (\n      this.maxSelectFile(event) &&\n      this.checkMimeType(event) &&\n      this.checkFileSize(event)\n    ) {\n      // if return true allow to setState\n      this.setState({\n        selectedFile: files,\n        loaded: 0\n      });\n    }\n  };\n  onClickHandler = () => {\n    const data = new FormData();\n    for (var x = 0; x < this.state.selectedFile.length; x++) {\n      data.append(\"file\", this.state.selectedFile[x]);\n    }\n    axios\n      .post(`http://localhost:8080/upload`, data, {\n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100\n          });\n        }\n      })\n      .then(res => {\n        // then print response status\n        toast.success(\"upload success\");\n      })\n      .catch(err => {\n        // then print response status\n        toast.error(\"upload fail\");\n      });\n  };\n  render() {\n    return (\n      <div className=\"AddProduct\">\n        <form onSubmit={this.handlDefault}>\n          <div className=\"item1\">\n            <input\n              className=\"btn btn-secondary\"\n              type=\"text\"\n              placeholder=\"Name Of Product\"\n            />\n            <button className=\"btn btn-danger\">Name Of Product</button>\n          </div>\n          <div className=\"item2\">\n            <select className=\"btn btn-secondary\">\n              <option value=\"phone\">Phone</option>\n              <option value=\"laptop\">Laptop</option>\n              <option value=\"screen\">Sceeen</option>\n            </select>\n            <button className=\"btn btn-danger\">Select Type Of Product</button>\n          </div>\n          <div className=\"item3\">\n            <textarea\n              className=\"btn btn-secondary\"\n              type=\"text\"\n              cols=\"30\"\n              rows=\"5\"\n              placeholder=\"Details Of Product\"\n            ></textarea>\n            <button className=\"btn btn-danger\">Details Of Product</button>\n          </div>\n          <div className=\"container item4\">\n            <div class=\"row\">\n              <div class=\"offset-md-3 col-md-6\">\n                <div class=\"form-group files\">\n                  <label>Upload Your File </label>\n                  <input\n                    type=\"file\"\n                    class=\"form-control\"\n                    multiple\n                    onChange={this.onChangeHandler}\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <ToastContainer />\n                  <Progress max=\"100\" color=\"success\" value={this.state.loaded}>\n                    {Math.round(this.state.loaded, 2)}%\n                  </Progress>\n                </div>\n\n                <button\n                  type=\"button\"\n                  class=\"btn btn-success btn-block\"\n                  onClick={this.onClickHandler}\n                >\n                  Upload\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"item5\">\n            <input\n              className=\"btn btn-secondary\"\n              type=\"text\"\n              placeholder=\"Place\"\n            />\n            <label className=\"btn btn-danger\">Place</label>\n            <input\n              className=\"btn btn-secondary\"\n              type=\"text\"\n              placeholder=\"Name\"\n            />\n            <label className=\"btn btn-danger\">Name</label>\n            <input\n              className=\"btn btn-secondary\"\n              type=\"number\"\n              placeholder=\"Phone Number\"\n            />\n            <label className=\"btn btn-danger\">Mobile</label>\n            <input\n              className=\"btn btn-secondary\"\n              type=\"email\"\n              placeholder=\"Place\"\n            />\n            <label className=\"btn btn-danger\">Email</label>\n          </div>\n\n          <div className=\"item6\">\n            <input type=\"checkbox\" name=\"vehicle1\" value=\"phone\" /> Phone\n            <input type=\"checkbox\" name=\"vehicle2\" value=\"email\" /> Email\n            <input type=\"checkbox\" name=\"vehicle3\" value=\"phone/email\" />\n            Email/Phone\n            <buutton className=\"btn btn-success\">Contact With</buutton>\n          </div>\n\n          <div className=\"item7\">\n            <button type=\"submit\" className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddProduct;\n"]},"metadata":{},"sourceType":"module"}