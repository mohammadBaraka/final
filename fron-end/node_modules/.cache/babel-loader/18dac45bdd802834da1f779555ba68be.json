{"ast":null,"code":"var _jsxFileName = \"/home/mohammad/Desktop/final/fron-end/src/Components/Add Produts/AddProdut.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { MDBInput, MDBCol } from \"mdbreact\";\nimport \"./AddProduct.css\";\n\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handlDefault = e => {\n      e.preventDefault();\n    };\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = []; // list allow mime type\n\n      const types = [\"image/png\", \"image/jpeg\", \"image/gif\"]; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container\n          err[x] = files[x].type + \" is not a supported format\\n\";\n        }\n      }\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error\n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.maxSelectFile = event => {\n      let files = event.target.files;\n\n      if (files.length > 3) {\n        const msg = \"Only 3 images can be uploaded at a time\";\n        event.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.checkFileSize = event => {\n      let files = event.target.files;\n      let size = 2000000;\n      let err = [];\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err[x] = files[x].type + \"is too large, please pick a smaller file\\n\";\n        }\n      }\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error\n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n        // if return true allow to setState\n        this.setState({\n          selectedFile: files,\n          loaded: 0\n        });\n      }\n    };\n\n    this.state = {\n      sub_categories: [],\n      selectedFile: null,\n      loaded: 0,\n      product_name: \"\",\n      product_type: \"\",\n      product_area: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8000/sub_categories\").then(response => response.json()).then(result => {\n      this.setState({\n        sub_categories: result.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AddProduct purple-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"shop_product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fa fa-cart-plus\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), \"Add Product\")), React.createElement(MDBCol, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Name Of Product\",\n      size: \"lg\",\n      name: \"\",\n      icon: \"fa fa-spinner\",\n      name: \"product_name\",\n      onChange: this.handleChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      className: \"btn btn-light\",\n      icon: \"fa fa-spinner\",\n      name: \"product_type\",\n      onChange: this.handleChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.sub_categories.map(sub_categorie => {\n      return React.createElement(\"option\", {\n        value: sub_categorie.sub_categories_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, sub_categorie.name);\n    })), React.createElement(MDBInput, {\n      label: \"Details Of Product\",\n      size: \"lg\",\n      type: \"textarea\",\n      icon: \"pencil-alt\",\n      name: \"product_area\",\n      color: \"red\",\n      onChange: this.handleChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      className: \"btn btn-light\",\n      onChange: this.handleChangeInput,\n      type: \"file\",\n      multiple: true,\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Progress, {\n      classNam: \"btn btn-success\",\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, Math.round(this.state.loaded, 6), \"%\")), React.createElement(\"input\", {\n      onChange: this.handleChangeInput,\n      type: \"checkbox\",\n      name: \"vehicle1\",\n      value: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), \" \", \"Phone\", React.createElement(\"input\", {\n      onChange: this.handleChangeInput,\n      type: \"checkbox\",\n      name: \"vehicle2\",\n      value: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), \" \", \"Email\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"vehicle3\",\n      value: \"phone/email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), \"Email/Phone\", React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Contact With\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default AddProduct;","map":{"version":3,"sources":["/home/mohammad/Desktop/final/fron-end/src/Components/Add Produts/AddProdut.js"],"names":["React","Component","axios","Progress","ToastContainer","toast","MDBInput","MDBCol","AddProduct","constructor","props","handleChangeInput","event","setState","target","name","value","handlDefault","e","preventDefault","checkMimeType","files","err","types","x","length","every","type","z","error","maxSelectFile","msg","warn","checkFileSize","size","onChangeHandler","selectedFile","loaded","state","sub_categories","product_name","product_type","product_area","componentDidMount","fetch","then","response","json","result","data","render","onSubmitHandler","map","sub_categorie","sub_categories_id","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { MDBInput, MDBCol } from \"mdbreact\";\nimport \"./AddProduct.css\";\n\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sub_categories: [],\n      selectedFile: null,\n      loaded: 0,\n      product_name: \"\",\n      product_type: \"\",\n      product_area: \"\"\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://localhost:8000/sub_categories\")\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          sub_categories: result.data\n        });\n      });\n  }\n\n  handleChangeInput = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handlDefault = e => {\n    e.preventDefault();\n  };\n  checkMimeType = event => {\n    //getting file object\n    let files = event.target.files;\n    //define message container\n    let err = [];\n    // list allow mime type\n    const types = [\"image/png\", \"image/jpeg\", \"image/gif\"];\n    // loop access array\n    for (var x = 0; x < files.length; x++) {\n      // compare file type find doesn't matach\n      if (types.every(type => files[x].type !== type)) {\n        // create error message and assign to container\n        err[x] = files[x].type + \" is not a supported format\\n\";\n      }\n    }\n    for (var z = 0; z < err.length; z++) {\n      // if message not same old that mean has error\n      // discard selected file\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n  maxSelectFile = event => {\n    let files = event.target.files;\n    if (files.length > 3) {\n      const msg = \"Only 3 images can be uploaded at a time\";\n      event.target.value = null;\n      toast.warn(msg);\n      return false;\n    }\n    return true;\n  };\n  checkFileSize = event => {\n    let files = event.target.files;\n    let size = 2000000;\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n      if (files[x].size > size) {\n        err[x] = files[x].type + \"is too large, please pick a smaller file\\n\";\n      }\n    }\n    for (var z = 0; z < err.length; z++) {\n      // if message not same old that mean has error\n      // discard selected file\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n  onChangeHandler = event => {\n    var files = event.target.files;\n    if (\n      this.maxSelectFile(event) &&\n      this.checkMimeType(event) &&\n      this.checkFileSize(event)\n    ) {\n      // if return true allow to setState\n      this.setState({\n        selectedFile: files,\n        loaded: 0\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"AddProduct purple-text \">\n        <div className=\"items\">\n          <div className=\"shop_product\">\n            <h2>\n              <i class=\"fa fa-cart-plus\" aria-hidden=\"true\"></i>\n              Add Product\n            </h2>\n          </div>\n          <MDBCol md=\"12\">\n            <form onSubmit={this.onSubmitHandler}>\n              <MDBInput\n                label=\"Name Of Product\"\n                size=\"lg\"\n                name=\"\"\n                icon=\"fa fa-spinner\"\n                name=\"product_name\"\n                onChange={this.handleChangeInput}\n              />\n              <select\n                className=\"btn btn-light\"\n                icon=\"fa fa-spinner\"\n                name=\"product_type\"\n                onChange={this.handleChangeInput}\n              >\n                {this.state.sub_categories.map(sub_categorie => {\n                  return (\n                    <option value={sub_categorie.sub_categories_id}>\n                      {sub_categorie.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <MDBInput\n                label=\"Details Of Product\"\n                size=\"lg\"\n                type=\"textarea\"\n                icon=\"pencil-alt\"\n                name=\"product_area\"\n                color=\"red\"\n                onChange={this.handleChangeInput}\n              />\n              <MDBInput\n                className=\"btn btn-light\"\n                onChange={this.handleChangeInput}\n                type=\"file\"\n                multiple\n                onChange={this.onChangeHandler}\n              />\n              <div className=\"form-group\">\n                <ToastContainer />\n                <Progress\n                  classNam=\"btn btn-success\"\n                  max=\"100\"\n                  color=\"success\"\n                  value={this.state.loaded}\n                >\n                  {Math.round(this.state.loaded, 6)}%\n                </Progress>\n              </div>\n              <input\n                onChange={this.handleChangeInput}\n                type=\"checkbox\"\n                name=\"vehicle1\"\n                value=\"phone\"\n              />{\" \"}\n              Phone\n              <input\n                onChange={this.handleChangeInput}\n                type=\"checkbox\"\n                name=\"vehicle2\"\n                value=\"email\"\n              />{\" \"}\n              Email\n              <input type=\"checkbox\" name=\"vehicle3\" value=\"phone/email\" />\n              Email/Phone\n              <button className=\"btn btn-success\">Contact With</button>\n              <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n              </button>\n            </form>\n          </MDBCol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProduct;\n"]},"metadata":{},"sourceType":"module"}